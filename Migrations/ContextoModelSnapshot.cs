// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoFinal.DAL;

#nullable disable

namespace ProyectoFinal.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("ProyectoFinal.Entidades.AreaTecnica", b =>
                {
                    b.Property<int>("AreaTecnicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreAreaTecnica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("AreaTecnicaId");

                    b.ToTable("AreaTecnica");

                    b.HasData(
                        new
                        {
                            AreaTecnicaId = 1,
                            NombreAreaTecnica = "Académico"
                        },
                        new
                        {
                            AreaTecnicaId = 2,
                            NombreAreaTecnica = "Informática"
                        },
                        new
                        {
                            AreaTecnicaId = 3,
                            NombreAreaTecnica = "Contabilidad"
                        });
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.Estudiante", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ApellidosMadre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ApellidosPadre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("AreaTecnicaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NombresMadre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NombresPadre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroIdentificacionMadre")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroIdentificacionPadre")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefonoMadre")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefonoPadre")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("EstudianteId");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.Maestro", b =>
                {
                    b.Property<int>("MaestroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("CantidadMaterias")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroIdentificacion")
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("MaestroId");

                    b.ToTable("Maestro");
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.MaestroDetalle", b =>
                {
                    b.Property<int>("MaestroDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaestroId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MaestroDetalleId");

                    b.HasIndex("MaestroId");

                    b.ToTable("MaestroDetalle");
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.Materia", b =>
                {
                    b.Property<int>("MateriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreMateria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("VecesAsignada")
                        .HasColumnType("INTEGER");

                    b.HasKey("MateriaId");

                    b.ToTable("Materia");

                    b.HasData(
                        new
                        {
                            MateriaId = 1,
                            NombreMateria = "Lengua Española",
                            VecesAsignada = 0
                        },
                        new
                        {
                            MateriaId = 2,
                            NombreMateria = "Matemática",
                            VecesAsignada = 0
                        },
                        new
                        {
                            MateriaId = 3,
                            NombreMateria = "Ciencias Naturales",
                            VecesAsignada = 0
                        },
                        new
                        {
                            MateriaId = 4,
                            NombreMateria = "Ciencias Sociales",
                            VecesAsignada = 0
                        });
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.Seccion", b =>
                {
                    b.Property<int>("SeccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AreaTecnicaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadEstudiantes")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaestroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SeccionId");

                    b.ToTable("Seccion");
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.SeccionDetalle", b =>
                {
                    b.Property<int>("SeccionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SeccionId");

                    b.ToTable("SeccionDetalle");
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.MaestroDetalle", b =>
                {
                    b.HasOne("ProyectoFinal.Entidades.Maestro", null)
                        .WithMany("MaestroDetalle")
                        .HasForeignKey("MaestroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.SeccionDetalle", b =>
                {
                    b.HasOne("ProyectoFinal.Entidades.Seccion", null)
                        .WithMany("SeccionDetalle")
                        .HasForeignKey("SeccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.Maestro", b =>
                {
                    b.Navigation("MaestroDetalle");
                });

            modelBuilder.Entity("ProyectoFinal.Entidades.Seccion", b =>
                {
                    b.Navigation("SeccionDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
